<scope ilk="blob" lang="Ruby" name="process/sys">
      <scope doc="The Process::Sys module contains UID and GID functions which&#xA;provide direct bindings to the system calls of the same&#xA;names instead of the more-portable versions of the same&#xA;functionality found in the Process, Process::UID, and&#xA;Process::GID modules." ilk="namespace" name="Sys">
        <scope doc="Returns the effective group ID for this process. Not&#xA;available on all platforms." ilk="function" name="getegid" signature="Process.egid          =&gt; fixnum&#xA;Process::GID.eid      =&gt; fixnum&#xA;Process::Sys.geteid   =&gt; fixnum" />
        <scope doc="Returns the effective user ID for this process." ilk="function" name="geteuid" signature="Process.euid           =&gt; fixnum&#xA;Process::UID.eid       =&gt; fixnum&#xA;Process::Sys.geteuid   =&gt; fixnum" />
        <scope doc="Returns the (real) group ID for this process." ilk="function" name="getgid" signature="Process.gid           =&gt; fixnum&#xA;Process::GID.rid      =&gt; fixnum&#xA;Process::Sys.getgid   =&gt; fixnum" />
        <scope doc="Returns the (real) user ID of this process." ilk="function" name="getuid" signature="Process.uid           =&gt; fixnum&#xA;Process::UID.rid      =&gt; fixnum&#xA;Process::Sys.getuid   =&gt; fixnum" />
        <scope doc="Returns true if the process was created as a result of an&#xA;execve(2) system call which had either of the setuid or&#xA;setgid bits set (and extra privileges were given as a&#xA;result) or if it has changed any of its real, effective or&#xA;saved user or group IDs since it began execution." ilk="function" name="issetugid" signature="Process::Sys.issetugid   =&gt; true or false" />
        <scope doc="Set the effective group ID of the calling process to&#xA;`integer&apos;. Not available on all platforms." ilk="function" name="setegid" signature="Process::Sys.setegid(integer)   =&gt; nil" />
        <scope doc="Set the effective user ID of the calling process to&#xA;`integer&apos;. Not available on all platforms." ilk="function" name="seteuid" signature="Process::Sys.seteuid(integer)   =&gt; nil" />
        <scope doc="Set the group ID of the current process to `integer&apos;. Not&#xA;available on all platforms." ilk="function" name="setgid" signature="Process::Sys.setgid(integer)   =&gt; nil" />
        <scope doc="Sets the (integer) real and/or effective group IDs of the&#xA;current process to `rid&apos; and `eid&apos;, respectively. A value of&#xA;-1 for either means to leave that ID unchanged." ilk="function" name="setregid" signature="Process::Sys.setregid(rid, eid)   =&gt; nil" />
        <scope doc="Sets the (integer) real, effective, and saved user IDs of&#xA;the current process to `rid&apos;, `eid&apos;, and `sid&apos; respectively.&#xA;A value of -1 for any value means to leave that ID&#xA;unchanged." ilk="function" name="setresgid" signature="Process::Sys.setresgid(rid, eid, sid)   =&gt; nil" />
        <scope doc="Sets the (integer) real, effective, and saved user IDs of&#xA;the current process to `rid&apos;, `eid&apos;, and `sid&apos; respectively.&#xA;A value of -1 for any value means to leave that ID&#xA;unchanged." ilk="function" name="setresuid" signature="Process::Sys.setresuid(rid, eid, sid)   =&gt; nil" />
        <scope doc="Sets the (integer) real and/or effective user IDs of the&#xA;current process to `rid&apos; and `eid&apos;, respectively. A value of&#xA;-1 for either means to leave that ID unchanged." ilk="function" name="setreuid" signature="Process::Sys.setreuid(rid, eid)   =&gt; nil" />
        <scope doc="Set the real group ID of the calling process to `integer&apos;.&#xA;Not available on all platforms." ilk="function" name="setrgid" signature="Process::Sys.setrgid(integer)   =&gt; nil" />
        <scope doc="Set the real user ID of the calling process to `integer&apos;.&#xA;Not available on all platforms." ilk="function" name="setruid" signature="Process::Sys.setruid(integer)   =&gt; nil" />
        <scope doc="Set the user ID of the current process to `integer&apos;. Not&#xA;available on all platforms." ilk="function" name="setuid" signature="Process::Sys.setuid(integer)   =&gt; nil" />
      </scope>
    </scope>
    