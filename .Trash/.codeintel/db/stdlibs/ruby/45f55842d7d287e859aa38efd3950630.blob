<scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_formatter">
      <scope ilk="namespace" line="1" lineend="672" name="RI">
        <scope classrefs="Object" ilk="class" line="2" lineend="232" name="TextFormatter">
          <scope ilk="function" line="4" lineend="4" name="indent" />
          <scope attributes="__ctor__" ilk="function" line="6" lineend="10" name="initialize" signature="initialize(options, indent)" />
          <scope ilk="function" line="15" lineend="24" name="draw_line" signature="draw_line(label=nil)" />
          <scope ilk="function" line="28" lineend="47" name="wrap" signature="wrap(txt, prefix=@indent, linelen=@width)" />
          <scope ilk="function" line="51" lineend="53" name="blankline" signature="blankline" />
          <scope doc="called when we want to ensure a nbew &apos;wrap&apos; starts on a&#xA;newline Only needed for HtmlFormatter, because the rest do&#xA;their own line breaking" ilk="function" line="61" lineend="62" name="break_to_newline" signature="break_to_newline" />
          <scope ilk="function" line="66" lineend="68" name="bold_print" signature="bold_print(txt)" />
          <scope ilk="function" line="72" lineend="74" name="raw_print_line" signature="raw_print_line(txt)" />
          <scope doc="convert HTML entities back to ASCII" ilk="function" line="79" lineend="86" name="conv_html" signature="conv_html(txt)" />
          <scope doc="convert markup into display form" ilk="function" line="89" lineend="95" name="conv_markup" signature="conv_markup(txt)" />
          <scope ilk="function" line="99" lineend="150" name="display_list" signature="display_list(list)" />
          <scope ilk="function" line="154" lineend="175" name="display_flow_item" signature="display_flow_item(item, prefix=@indent)" />
          <scope ilk="function" line="179" lineend="184" name="display_verbatim_flow_item" signature="display_verbatim_flow_item(item, prefix=@indent)" />
          <scope ilk="function" line="188" lineend="207" name="display_heading" signature="display_heading(text, level, indent)" />
          <scope ilk="function" line="210" lineend="214" name="display_flow" signature="display_flow(flow)" />
          <scope ilk="function" line="216" lineend="229" name="strip_attributes" signature="strip_attributes(txt)" />
        </scope>
        <scope classrefs="TextFormatter" doc="Handle text with attributes." ilk="class" line="241" lineend="362" name="AttributeFormatter">
          <scope classrefs="Object" doc="TODO: struct?" ilk="class" line="256" lineend="264" name="AttrChar">
            <scope ilk="function" line="257" lineend="257" name="char" />
            <scope ilk="function" line="258" lineend="258" name="attr" />
            <scope attributes="__ctor__" ilk="function" line="260" lineend="263" name="initialize" signature="initialize(char, attr)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="267" lineend="298" name="AttributeString">
            <scope ilk="function" line="268" lineend="268" name="txt" />
            <scope attributes="__ctor__" ilk="function" line="270" lineend="273" name="initialize" signature="initialize" />
            <scope ilk="function" line="275" lineend="277" name="&lt;&lt;" signature="&lt;&lt;(char" />
            <scope ilk="function" line="279" lineend="281" name="empty?" signature="empty?" />
            <scope doc="accept non space, then all following spaces" ilk="function" line="284" lineend="297" name="next_word" signature="next_word" />
          </scope>
          <scope doc="overrides base class." ilk="function" line="305" lineend="325" name="wrap" signature="wrap(txt, prefix=@indent, linelen=@width)" />
          <scope doc="overridden in specific formatters" ilk="function" line="331" lineend="337" name="write_attribute_text" signature="write_attribute_text(prefix, line)" />
          <scope doc="again, overridden" ilk="function" line="341" lineend="343" name="bold_print" signature="bold_print(txt)" />
          <scope ilk="function" line="347" lineend="360" name="add_attributes_to" signature="add_attributes_to(txt)" />
        </scope>
        <scope classrefs="AttributeFormatter" doc="This formatter generates overstrike-style formatting, which&#xA;works with pagers such as man and less." ilk="class" line="370" lineend="395" name="OverstrikeFormatter">
          <scope ilk="function" line="374" lineend="387" name="write_attribute_text" signature="write_attribute_text(prefix, line)" />
          <scope doc="draw a string in bold" ilk="function" line="390" lineend="394" name="bold_print" signature="bold_print(text)" />
        </scope>
        <scope classrefs="AttributeFormatter" doc="This formatter uses ANSI escape sequences to colorize stuff&#xA;works with pages such as man and less." ilk="class" line="403" lineend="462" name="AnsiFormatter">
          <scope attributes="__ctor__" ilk="function" line="405" lineend="408" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="410" lineend="423" name="write_attribute_text" signature="write_attribute_text(prefix, line)" />
          <scope ilk="function" line="426" lineend="428" name="bold_print" signature="bold_print(txt)" />
          <scope ilk="function" line="436" lineend="443" name="display_heading" signature="display_heading(text, level, indent)" />
          <scope ilk="function" line="453" lineend="461" name="update_attributes" signature="update_attributes(attr)" />
        </scope>
        <scope classrefs="AttributeFormatter" doc="This formatter uses HTML." ilk="class" line="468" lineend="604" name="HtmlFormatter">
          <scope attributes="__ctor__" ilk="function" line="470" lineend="472" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="474" lineend="485" name="write_attribute_text" signature="write_attribute_text(prefix, line)" />
          <scope ilk="function" line="487" lineend="492" name="draw_line" signature="draw_line(label=nil)" />
          <scope ilk="function" line="494" lineend="496" name="bold_print" signature="bold_print(txt)" />
          <scope ilk="function" line="498" lineend="500" name="blankline" signature="blankline()" />
          <scope ilk="function" line="502" lineend="504" name="break_to_newline" signature="break_to_newline" />
          <scope ilk="function" line="506" lineend="510" name="display_heading" signature="display_heading(text, level, indent)" />
          <scope ilk="function" line="514" lineend="553" name="display_list" signature="display_list(list)" />
          <scope ilk="function" line="555" lineend="561" name="display_verbatim_flow_item" signature="display_verbatim_flow_item(item, prefix=@indent)" />
          <scope ilk="function" line="571" lineend="588" name="update_attributes" signature="update_attributes(current, wanted)" />
          <scope ilk="function" line="590" lineend="594" name="tag" signature="tag(code)" />
          <scope ilk="function" line="596" lineend="602" name="escape" signature="escape(str)" />
        </scope>
        <scope classrefs="TextFormatter" doc="This formatter reduces extra lines for a simpler output." ilk="class" line="611" lineend="647" name="SimpleFormatter">
          <scope doc="No extra blank lines" ilk="function" line="617" lineend="618" name="blankline" signature="blankline" />
          <scope doc="Display labels only, no lines" ilk="function" line="624" lineend="629" name="draw_line" signature="draw_line(label=nil)" />
          <scope doc="Place heading level indicators inline with heading." ilk="function" line="635" lineend="645" name="display_heading" signature="display_heading(text, level, indent)" />
        </scope>
        <scope classrefs="Object" doc="Finally, fill in the list of known formatters" ilk="class" line="652" lineend="670" name="TextFormatter">
          <scope attributes="__classmethod__" ilk="function" line="662" lineend="664" name="list" signature="TextFormatter.list" />
          <scope attributes="__classmethod__" ilk="function" line="666" lineend="668" name="for" signature="TextFormatter.for(name)" />
        </scope>
      </scope>
    </scope>
    