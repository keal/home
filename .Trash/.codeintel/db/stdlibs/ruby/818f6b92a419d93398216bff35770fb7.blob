<scope ilk="blob" lang="Ruby" name="rdoc/markup/simple_markup/lines">
      <scope doc="We store the lines we&apos;re working on as objects of class&#xA;Line." ilk="namespace" line="7" lineend="151" name="SM">
        <scope classrefs="Object" ilk="class" line="9" lineend="86" name="Line">
          <scope ilk="function" line="20" lineend="20" name="type" />
          <scope ilk="function" line="20" lineend="20" name="type=" />
          <scope ilk="function" line="23" lineend="23" name="level" />
          <scope ilk="function" line="23" lineend="23" name="level=" />
          <scope ilk="function" line="26" lineend="26" name="text" />
          <scope ilk="function" line="26" lineend="26" name="text=" />
          <scope ilk="function" line="30" lineend="30" name="param" />
          <scope ilk="function" line="30" lineend="30" name="param=" />
          <scope ilk="function" line="33" lineend="33" name="flag" />
          <scope ilk="function" line="33" lineend="33" name="flag=" />
          <scope ilk="function" line="36" lineend="36" name="leading_spaces" />
          <scope ilk="function" line="36" lineend="36" name="leading_spaces=" />
          <scope ilk="function" line="39" lineend="39" name="deleted" />
          <scope ilk="function" line="39" lineend="39" name="deleted=" />
          <scope attributes="__ctor__" doc="true if this line has been deleted from the list of lines" ilk="function" line="42" lineend="59" name="initialize" signature="initialize(text)" />
          <scope doc="Return true if this line is blank" ilk="function" line="62" lineend="64" name="isBlank?" signature="isBlank?" />
          <scope doc="stamp a line with a type, a level, a prefix, and a flag" ilk="function" line="67" lineend="69" name="stamp" signature="stamp(type, level, param=&quot;&quot;, flag=nil)" />
          <scope doc="Strip off the leading margin" ilk="function" line="75" lineend="81" name="strip_leading" signature="strip_leading(size)" />
          <scope ilk="function" line="83" lineend="85" name="to_s" signature="to_s" />
        </scope>
        <scope classrefs="Object" doc="A container for all the lines" ilk="class" line="93" lineend="150" name="Lines">
          <scope ilk="function" line="96" lineend="96" name="lines" />
          <scope attributes="__ctor__" doc="for debugging" ilk="function" line="98" lineend="101" name="initialize" signature="initialize(lines)" />
          <scope ilk="function" line="103" lineend="105" name="empty?" signature="empty?" />
          <scope ilk="function" line="107" lineend="111" name="each" signature="each" />
          <scope doc="def [](index) @lines[index] end" ilk="function" line="117" lineend="119" name="rewind" signature="rewind" />
          <scope ilk="function" line="121" lineend="127" name="next" signature="next" />
          <scope ilk="function" line="129" lineend="131" name="unget" signature="unget" />
          <scope ilk="function" line="133" lineend="135" name="delete" signature="delete(a_line)" />
          <scope ilk="function" line="137" lineend="141" name="normalize" signature="normalize" />
          <scope ilk="function" line="143" lineend="145" name="as_text" signature="as_text" />
          <scope ilk="function" line="147" lineend="149" name="line_types" signature="line_types" />
          <import symbol="Enumerable" />
        </scope>
      </scope>
    </scope>
    