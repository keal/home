<scope ilk="blob" lang="Ruby" name="test/unit/util/observable">
      <import line="5" module="test/unit/util/procwrapper" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="7" lineend="88" name="Test">
        <scope ilk="namespace" line="8" lineend="87" name="Unit">
          <scope ilk="namespace" line="9" lineend="86" name="Util">
            <scope doc="This is a utility class that allows anything mixing it in to&#xA;notify a set of listeners about interesting events." ilk="namespace" line="14" lineend="85" name="Observable">
              <scope doc="Adds the passed proc as a listener on the channel indicated&#xA;by channel_name." ilk="function" line="29" lineend="43" name="add_listener" signature="add_listener(channel_name, listener_key=NOTHING, &amp;listener)" />
              <scope doc="Removes the listener indicated by listener_key from the&#xA;channel indicated by channel_name." ilk="function" line="49" lineend="60" name="remove_listener" signature="remove_listener(channel_name, listener_key)" />
              <scope doc="Calls all the procs registered on the channel indicated by&#xA;channel_name." ilk="function" line="72" lineend="78" name="notify_listeners" signature="notify_listeners(channel_name, *arguments)" />
              <scope ilk="function" line="81" lineend="84" name="channels" signature="channels" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    