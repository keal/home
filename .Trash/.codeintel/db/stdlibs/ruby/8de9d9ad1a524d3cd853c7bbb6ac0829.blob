<scope ilk="blob" lang="Ruby" name="drb/unix">
      <import line="1" module="socket" symbol="*" />
      <import line="2" module="drb/drb" symbol="*" />
      <import line="3" module="tmpdir" symbol="*" />
      <scope ilk="namespace" line="7" lineend="108" name="DRb">
        <scope classrefs="DRbTCPSocket" ilk="class" line="9" lineend="105" name="DRbUNIXSocket">
          <scope attributes="__classmethod__" ilk="function" line="10" lineend="19" name="parse_uri" signature="self.parse_uri(uri)" />
          <scope attributes="__classmethod__" ilk="function" line="21" lineend="26" name="open" signature="self.open(uri, config)" />
          <scope attributes="__classmethod__" ilk="function" line="28" lineend="49" name="open_server" signature="self.open_server(uri, config)">
            <import line="40" module="etc" symbol="*" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="51" lineend="54" name="uri_option" signature="self.uri_option(uri, config)" />
          <scope attributes="__ctor__" ilk="function" line="56" lineend="61" name="initialize" signature="initialize(uri, soc, config={}, server_mode = false)" />
          <scope attributes="__classmethod__" doc="import from tempfile.rb" ilk="function" line="66" lineend="86" name="temp_server" signature="self.temp_server" />
          <scope ilk="function" line="89" lineend="95" name="close" signature="close" />
          <scope ilk="function" line="97" lineend="100" name="accept" signature="accept" />
          <scope ilk="function" line="102" lineend="104" name="set_sockopt" signature="set_sockopt(soc)" />
        </scope>
      </scope>
    </scope>
    