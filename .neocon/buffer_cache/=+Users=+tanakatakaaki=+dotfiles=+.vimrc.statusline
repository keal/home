[{'word': 'StatusLine', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'StatusLine'}, {'word': 'laststatus', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'laststatus'}, {'word': 'ruler', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'ruler'}, {'word': '-powerline', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': '-powerline'}, {'word': 'g:Powerline_symbols', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'g:Powerline_symbols'}, {'word': 'fancy', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'fancy'}, {'word': 'winwidth', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'winwidth'}, {'word': 'statusline', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'statusline'}, {'word': '&fenc', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': '&fenc'}, {'word': '&fenc:', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': '&fenc:'}, {'word': '&enc', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': '&enc'}, {'word': 'g:HahHah', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'g:HahHah'}, {'word': 'GetB', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'GetB'}, {'word': 'fugitive#statusline', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'fugitive#statusline'}, {'word': 'else', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'else'}, {'word': 'endif', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'endif'}, {'word': 'augroup', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'augroup'}, {'word': 'InsertHook', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'InsertHook'}, {'word': 'autocmd!', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'autocmd!'}, {'word': 'autocmd', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'autocmd'}, {'word': 'InsertEnter', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'InsertEnter'}, {'word': 'highlight', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'highlight'}, {'word': 'guifg', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'guifg'}, {'word': 'ccdc90', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'ccdc90'}, {'word': 'guibg', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'guibg'}, {'word': 'E4340', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'E4340'}, {'word': 'ctermfg', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'ctermfg'}, {'word': 'cyan', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'cyan'}, {'word': 'InsertLeave', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'InsertLeave'}, {'word': 'white', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'white'}, {'word': 'QuickFix', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'QuickFix'}, {'word': 'QuickfixCmdPost', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'QuickfixCmdPost'}, {'word': 'make', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'make'}, {'word': 'grep', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'grep'}, {'word': 'grepadd', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'grepadd'}, {'word': 'vimgrep', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'vimgrep'}, {'word': 'vimgrepadd', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'vimgrepadd'}, {'word': 'cwin', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'cwin'}, {'word': 'lmake', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'lmake'}, {'word': 'lgrep', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'lgrep'}, {'word': 'lgrepadd', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'lgrepadd'}, {'word': 'lvimgrep', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'lvimgrep'}, {'word': 'lvimgrepadd', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'lvimgrepadd'}, {'word': 'lwin', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'lwin'}, {'word': 'function!', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'function!'}, {'word': 'matchstr', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'matchstr'}, {'word': 'getline', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'getline'}, {'word': 'iconv', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'iconv'}, {'word': 'return', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'return'}, {'word': 'String2Hex', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'String2Hex'}, {'word': 'endfunction', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'endfunction'}, {'word': 'help', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'help'}, {'word': 'eval', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'eval'}, {'word': '-examples', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': '-examples'}, {'word': 'function', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'function'}, {'word': 'Nr2Hex', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'Nr2Hex'}, {'word': 'returns', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'returns'}, {'word': 'string', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'string'}, {'word': 'number', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'number'}, {'word': 'func!', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'func!'}, {'word': 'a:nr', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'a:nr'}, {'word': 'while', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'while'}, {'word': 'ABCDEF', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'ABCDEF'}, {'word': 'endwhile', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'endwhile'}, {'word': 'endfunc', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'endfunc'}, {'word': 'converts', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'converts'}, {'word': 'each', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'each'}, {'word': 'character', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'character'}, {'word': 'strlen', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'strlen'}, {'word': 'a:str', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'a:str'}, {'word': 'char2nr', 'menu': '[B] .vimrc.statusli', 'kind': '', 'abbr': 'char2nr'}]
