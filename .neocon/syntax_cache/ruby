[{'word': 'uster', 'menu': '[S] rubyNotTop'}, {'word': 'blank', 'menu': '[S] rubyRegexpCharC'}, {'word': 'BbGZz', 'menu': '[S] rubyRegexpAncho'}, {'word': 'tion', 'menu': '[S] rubyAccess'}, {'word': 'iomxneus', 'menu': '[S] rubyRegexp'}, {'word': 'ION', 'menu': '[S] rubyPredefinedC'}, {'word': 'alias', 'menu': '[S] rubyDefine'}, {'word': 'alias_method_chain', 'menu': '[S] rubyRailsMethod'}, {'word': 'alias_attribute', 'menu': '[S] rubyRailsMethod'}, {'word': 'ALLBUT', 'menu': '[S] rubyInterpolati'}, {'word': 'alnum', 'menu': '[S] rubyRegexpCharC'}, {'word': 'alpha', 'menu': '[S] rubyRegexpCharC'}, {'word': 'abefnrstv', 'menu': '[S] rubyStringEscap'}, {'word': 'sif', 'menu': '[S] rubyConditional'}, {'word': 'abort', 'menu': '[S] rubyControl'}, {'word': 'print', 'menu': '[S] rubyRegexpCharC'}, {'word': 'private', 'menu': '[S] rubyAccess'}, {'word': 'private_class_method', 'menu': '[S] rubyAccess'}, {'word': 'PROGRAM_NAME', 'menu': '[S] rubyPredefinedV'}, {'word': 'proc', 'menu': '[S] rubyKeyword'}, {'word': 'protected', 'menu': '[S] rubyAccess'}, {'word': 's_delegating_writer', 'menu': '[S] rubyRailsMethod'}, {'word': '@Spell', 'menu': '[S] rubyString'}, {'word': 'exit!', 'menu': '[S] rubyControl'}, {'word': 'exit', 'menu': '[S] rubyControl'}, {'word': 's_inheritable_array', 'menu': '[S] rubyRailsMethod'}, {'word': 'end', 'menu': '[S] rubyInterpolati'}, {'word': 'END', 'menu': '[S] rubyBeginEnd'}, {'word': 'extend', 'menu': '[S] rubyInclude'}, {'word': 'ENGINE', 'menu': '[S] rubyPredefinedC'}, {'word': '__ENCODING__', 'menu': '[S] rubyPseudoVaria'}, {'word': '__END__', 'menu': '[S] rubyData'}, {'word': 'hen', 'menu': '[S] rubyConditional'}, {'word': 'heritable_attribute', 'menu': '[S] rubyRailsMethod'}, {'word': 'ensure', 'menu': '[S] rubyExceptional'}, {'word': 'ENV', 'menu': '[S] rubyPredefinedC'}, {'word': 'ork', 'menu': '[S] rubyControl'}, {'word': 'ritable_hash_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'ttr_internal_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'DdHhSsWw', 'menu': '[S] rubyRegexpCharC'}, {'word': 'stderr', 'menu': '[S] rubyPredefinedV'}, {'word': 'stdin', 'menu': '[S] rubyPredefinedV'}, {'word': 'stdout', 'menu': '[S] rubyPredefinedV'}, {'word': 'STDERR', 'menu': '[S] rubyPredefinedC'}, {'word': 'STDIN', 'menu': '[S] rubyPredefinedC'}, {'word': 'STDOUT', 'menu': '[S] rubyPredefinedC'}, {'word': 'neus', 'menu': '[S] rubyRegexp'}, {'word': 'fold', 'menu': '[S] rubyString'}, {'word': 'fork', 'menu': '[S] rubyControl'}, {'word': 'for', 'menu': '[S] rubyOptionalDoL'}, {'word': 'fout', 'menu': '[S] rubyPredefinedV'}, {'word': 'cntrl', 'menu': '[S] rubyRegexpCharC'}, {'word': '_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'DATA', 'menu': '[S] rubyPredefinedC'}, {'word': ':space', 'menu': '[S] rubyAliasDeclar'}, {'word': 'DEBUG', 'menu': '[S] rubyPredefinedV'}, {'word': 'debugger', 'menu': '[S] rubyRailsMethod'}, {'word': 'deferr', 'menu': '[S] rubyPredefinedV'}, {'word': 'defout', 'menu': '[S] rubyPredefinedV'}, {'word': 'defined?', 'menu': '[S] rubyOperator'}, {'word': 'def', 'menu': '[S] rubyDefine'}, {'word': 'defined', 'menu': '[S] rubyKeywordAsMe'}, {'word': 'dout', 'menu': '[S] rubyPredefinedV'}, {'word': 'delegate', 'menu': '[S] rubyRailsMethod'}, {'word': 'delegating_accessor', 'menu': '[S] rubyRailsMethod'}, {'word': 'task', 'menu': '[S] rubyRailsRakeMe'}, {'word': 'nsparent', 'menu': '[S] rubyNestedSquar'}, {'word': 'derr', 'menu': '[S] rubyPredefinedV'}, {'word': 'DESCRIPTION', 'menu': '[S] rubyPredefinedC'}, {'word': 'desc', 'menu': '[S] rubyRailsRakeMe'}, {'word': 'ansparent', 'menu': '[S] rubyRegexpBrack'}, {'word': 'super', 'menu': '[S] rubyKeyword'}, {'word': 'superclass_delegating_accessor', 'menu': '[S] rubyRailsMethod'}, {'word': 'superclass_delegating_reader', 'menu': '[S] rubyRailsMethod'}, {'word': 'superclass_delegating_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'NIL', 'menu': '[S] rubyPredefinedC'}, {'word': 'nil', 'menu': '[S] rubyPseudoVaria'}, {'word': 'CODE', 'menu': '[S] rubyPredefinedV'}, {'word': 'skip', 'menu': '[S] rubyString'}, {'word': 'contains', 'menu': '[S] rubyInterpolati'}, {'word': 'SAFE', 'menu': '[S] rubyPredefinedV'}, {'word': 'rubyConditional', 'menu': '[S] rubyConditional'}, {'word': 'rubyCaseExpression', 'menu': '[S] rubyConditional'}, {'word': 'rubyExceptional', 'menu': '[S] rubyExceptional'}, {'word': 'rubyBlockExpression', 'menu': '[S] rubyExceptional'}, {'word': 'rubyMethodExceptional', 'menu': '[S] rubyMethodExcep'}, {'word': 'rubyMethodBlock', 'menu': '[S] rubyMethodExcep'}, {'word': 'rubyTodo', 'menu': '[S] rubyTodo'}, {'word': 'rubyStringEscape', 'menu': '[S] rubyStringEscap'}, {'word': 'rubyQuoteEscape', 'menu': '[S] rubyQuoteEscape'}, {'word': 'rubyInterpolationDelimiter', 'menu': '[S] rubyInterpolati'}, {'word': 'rubyInterpolation', 'menu': '[S] rubyInterpolati'}, {'word': 'rubyInstanceVariable', 'menu': '[S] rubyInstanceVar'}, {'word': 'rubyClassVariable', 'menu': '[S] rubyClassVariab'}, {'word': 'rubyGlobalVariable', 'menu': '[S] rubyGlobalVaria'}, {'word': 'rubyPredefinedVariable', 'menu': '[S] rubyPredefinedV'}, {'word': 'rubyInvalidVariable', 'menu': '[S] rubyInvalidVari'}, {'word': 'rubyNoInterpolation', 'menu': '[S] rubyNoInterpola'}, {'word': 'rubyDelimEscape', 'menu': '[S] rubyDelimEscape'}, {'word': 'rubyString', 'menu': '[S] rubyString'}, {'word': 'rubyStringDelimiter', 'menu': '[S] rubyString'}, {'word': 'rubyNestedParentheses', 'menu': '[S] rubyNestedParen'}, {'word': 'rubyNestedCurlyBraces', 'menu': '[S] rubyNestedCurly'}, {'word': 'rubyNestedAngleBrackets', 'menu': '[S] rubyNestedAngle'}, {'word': 'rubyNestedSquareBrackets', 'menu': '[S] rubyNestedSquar'}, {'word': 'rubyRegexpSpecial', 'menu': '[S] rubyRegexpSpeci'}, {'word': 'rubyRegexpComment', 'menu': '[S] rubyRegexpComme'}, {'word': 'rubyRegexpParens', 'menu': '[S] rubyRegexpParen'}, {'word': 'rubyRegexpCharClass', 'menu': '[S] rubyRegexpCharC'}, {'word': 'rubyRegexpEscape', 'menu': '[S] rubyRegexpEscap'}, {'word': 'rubyRegexpBrackets', 'menu': '[S] rubyRegexpBrack'}, {'word': 'rubyRegexpQuantifier', 'menu': '[S] rubyRegexpQuant'}, {'word': 'rubyRegexpAnchor', 'menu': '[S] rubyRegexpAncho'}, {'word': 'rubyRegexpDot', 'menu': '[S] rubyRegexpDot'}, {'word': 'rubyASCIICode', 'menu': '[S] rubyASCIICode'}, {'word': 'rubyInteger', 'menu': '[S] rubyInteger'}, {'word': 'rubyFloat', 'menu': '[S] rubyFloat'}, {'word': 'rubyLocalVariableOrMethod', 'menu': '[S] rubyLocalVariab'}, {'word': 'rubyBlockArgument', 'menu': '[S] rubyBlockArgume'}, {'word': 'rubyConstant', 'menu': '[S] rubyConstant'}, {'word': 'rubySymbol', 'menu': '[S] rubySymbol'}, {'word': 'rubyBlockParameter', 'menu': '[S] rubyBlockParame'}, {'word': 'rubyBlockParameterList', 'menu': '[S] rubyBlockParame'}, {'word': 'rubyPredefinedConstant', 'menu': '[S] rubyPredefinedC'}, {'word': 'RUBY_', 'menu': '[S] rubyPredefinedC'}, {'word': 'rubyRegexp', 'menu': '[S] rubyRegexp'}, {'word': 'rubyRegexpDelimiter', 'menu': '[S] rubyRegexp'}, {'word': 'rubyHeredocStart', 'menu': '[S] rubyHeredocStar'}, {'word': 'rubyAliasDeclaration2', 'menu': '[S] rubyAliasDeclar'}, {'word': 'rubyAliasDeclaration', 'menu': '[S] rubyAliasDeclar'}, {'word': 'rubyBoolean', 'menu': '[S] rubyBoolean'}, {'word': 'rubyPseudoVariable', 'menu': '[S] rubyPseudoVaria'}, {'word': 'rubyMethodDeclaration', 'menu': '[S] rubyMethodDecla'}, {'word': 'rubyOperator', 'menu': '[S] rubyOperator'}, {'word': 'rubyClassDeclaration', 'menu': '[S] rubyClassDeclar'}, {'word': 'rubyModuleDeclaration', 'menu': '[S] rubyModuleDecla'}, {'word': 'rubyFunction', 'menu': '[S] rubyFunction'}, {'word': 'rubyControl', 'menu': '[S] rubyControl'}, {'word': 'rubyKeyword', 'menu': '[S] rubyKeyword'}, {'word': 'rubyBeginEnd', 'menu': '[S] rubyBeginEnd'}, {'word': 'rubyDefine', 'menu': '[S] rubyDefine'}, {'word': 'rubyClass', 'menu': '[S] rubyClass'}, {'word': 'rubyModule', 'menu': '[S] rubyModule'}, {'word': 'rubyBlock', 'menu': '[S] rubyBlock'}, {'word': 'rubyConditionalModifier', 'menu': '[S] rubyConditional'}, {'word': 'rubyRepeatModifier', 'menu': '[S] rubyRepeatModif'}, {'word': 'rubyDoBlock', 'menu': '[S] rubyDoBlock'}, {'word': 'rubyCurlyBlock', 'menu': '[S] rubyCurlyBlock'}, {'word': 'rubyArrayLiteral', 'menu': '[S] rubyArrayLitera'}, {'word': 'rubyArrayDelimiter', 'menu': '[S] rubyArrayLitera'}, {'word': 'rubyConditionalExpression', 'menu': '[S] rubyConditional'}, {'word': 'rubyOptionalDoLine', 'menu': '[S] rubyOptionalDoL'}, {'word': 'rubyRepeat', 'menu': '[S] rubyOptionalDoL'}, {'word': 'rubyOptionalDo', 'menu': '[S] rubyOptionalDoL'}, {'word': 'rubyRepeatExpression', 'menu': '[S] rubyRepeatExpre'}, {'word': 'rubyAccess', 'menu': '[S] rubyAccess'}, {'word': 'rubyAttribute', 'menu': '[S] rubyAttribute'}, {'word': 'rubyEval', 'menu': '[S] rubyEval'}, {'word': 'rubyException', 'menu': '[S] rubyException'}, {'word': 'rubyInclude', 'menu': '[S] rubyInclude'}, {'word': 'rubySharpBang', 'menu': '[S] rubySharpBang'}, {'word': 'rubyComment', 'menu': '[S] rubyComment'}, {'word': 'rubySpaceError', 'menu': '[S] rubyComment'}, {'word': 'rubyMultilineComment', 'menu': '[S] rubyMultilineCo'}, {'word': 'rubyDocumentation', 'menu': '[S] rubyDocumentati'}, {'word': 'rubyKeywordAsMethod', 'menu': '[S] rubyKeywordAsMe'}, {'word': 'rubyData', 'menu': '[S] rubyData'}, {'word': 'rubyDataDirective', 'menu': '[S] rubyData'}, {'word': 'rubyRailsUserClass', 'menu': '[S] rubyRailsUserCl'}, {'word': 'rubyRailsMethod', 'menu': '[S] rubyRailsMethod'}, {'word': 'rubyRailsRakeMethod', 'menu': '[S] rubyRailsRakeMe'}, {'word': 'rubyRailsInclude', 'menu': '[S] rubyRailsInclud'}, {'word': 'rubyNotTop', 'menu': '[S] rubyNotTop'}, {'word': 'rubyExtendedStringSpecial', 'menu': '[S] rubyExtendedStr'}, {'word': 'rubyDeclaration', 'menu': '[S] rubyDeclaration'}, {'word': 'rubyStringSpecial', 'menu': '[S] rubyStringSpeci'}, {'word': 'rubyRailsTop', 'menu': '[S] rubyRailsTop'}, {'word': 'rubyTop', 'menu': '[S] rubyTop'}, {'word': 'rue', 'menu': '[S] rubyBoolean'}, {'word': 'epend', 'menu': '[S] rubyRegexp'}, {'word': 'cessor_with_default', 'menu': '[S] rubyRailsMethod'}, {'word': 'URES', 'menu': '[S] rubyPredefinedV'}, {'word': 'BOSE', 'menu': '[S] rubyPredefinedV'}, {'word': 'before', 'menu': '[S] rubyRailsRakeMe'}, {'word': 'BEGIN', 'menu': '[S] rubyBeginEnd'}, {'word': 'begin', 'menu': '[S] rubyBlockExpres'}, {'word': 'rap', 'menu': '[S] rubyControl'}, {'word': 'lias', 'menu': '[S] rubyDefine'}, {'word': 'ntains', 'menu': '[S] rubyAliasDeclar'}, {'word': 'ntil', 'menu': '[S] rubyKeywordAsMe'}, {'word': 'public', 'menu': '[S] rubyAccess'}, {'word': 'public_class_method', 'menu': '[S] rubyAccess'}, {'word': 'punct', 'menu': '[S] rubyRegexpCharC'}, {'word': 'xxx', 'menu': '[S] rubyConditional'}, {'word': 'XXX', 'menu': '[S] rubyTodo'}, {'word': 'kip', 'menu': '[S] rubyRegexpComme'}, {'word': 'xdigit', 'menu': '[S] rubyRegexpCharC'}, {'word': 'FILENAME', 'menu': '[S] rubyPredefinedV'}, {'word': 'file', 'menu': '[S] rubyRailsRakeMe'}, {'word': 'ABbGZz', 'menu': '[S] rubyRegexpAncho'}, {'word': 'ontains', 'menu': '[S] rubyInterpolati'}, {'word': 'egin', 'menu': '[S] rubyBlockExpres'}, {'word': 'graph', 'menu': '[S] rubyRegexpCharC'}, {'word': 'oup', 'menu': '[S] rubyNestedParen'}, {'word': 'group', 'menu': '[S] rubyDefine'}, {'word': 'isplay', 'menu': '[S] rubyRegexpSpeci'}, {'word': 'ApplicationController', 'menu': '[S] rubyRailsUserCl'}, {'word': 'ApplicationHelper', 'menu': '[S] rubyRailsUserCl'}, {'word': ':alnum', 'menu': '[S] rubyLocalVariab'}, {'word': ':alpha', 'menu': '[S] rubyFunction'}, {'word': 'after', 'menu': '[S] rubyRailsRakeMe'}, {'word': 'play', 'menu': '[S] rubyInstanceVar'}, {'word': 'PLATFORM', 'menu': '[S] rubyPredefinedC'}, {'word': 'NAME', 'menu': '[S] rubyPredefinedV'}, {'word': 'namespace', 'menu': '[S] rubyRailsRakeMe'}, {'word': 'PATH', 'menu': '[S] rubyPredefinedV'}, {'word': 'PATCHLEVEL', 'menu': '[S] rubyPredefinedC'}, {'word': 'hSsWw', 'menu': '[S] rubyRegexpCharC'}, {'word': 'unless', 'menu': '[S] rubyRegexp'}, {'word': 'eritable_attributes', 'menu': '[S] rubyRailsMethod'}, {'word': 'hile', 'menu': '[S] rubyKeywordAsMe'}, {'word': 'until', 'menu': '[S] rubyRegexp'}, {'word': 'and', 'menu': '[S] rubyRegexp'}, {'word': 'old', 'menu': '[S] rubyString'}, {'word': 'transparent', 'menu': '[S] rubyDelimEscape'}, {'word': 'trap', 'menu': '[S] rubyControl'}, {'word': 'match', 'menu': '[S] rubyConditional'}, {'word': 'matchgroup', 'menu': '[S] rubyInterpolati'}, {'word': 'MatchingData', 'menu': '[S] rubyPredefinedC'}, {'word': 'mattr_accessor', 'menu': '[S] rubyRailsMethod'}, {'word': 'mattr_reader', 'menu': '[S] rubyRailsMethod'}, {'word': 'mattr_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'itable_array_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'tdin', 'menu': '[S] rubyPredefinedV'}, {'word': ':lower', 'menu': '[S] rubyLocalVariab'}, {'word': 'lambda', 'menu': '[S] rubyKeyword'}, {'word': 'lass', 'menu': '[S] rubyClass'}, {'word': 'lay', 'menu': '[S] rubyInteger'}, {'word': 'igit', 'menu': '[S] rubyRegexpCharC'}, {'word': 'VERBOSE', 'menu': '[S] rubyPredefinedV'}, {'word': 'VERSION', 'menu': '[S] rubyPredefinedC'}, {'word': 'FIXME', 'menu': '[S] rubyTodo'}, {'word': 'essor', 'menu': '[S] rubyRailsMethod'}, {'word': 'break', 'menu': '[S] rubyControl'}, {'word': 'TODO', 'menu': '[S] rubyTodo'}, {'word': 'then', 'menu': '[S] rubyConditional'}, {'word': 'splay', 'menu': '[S] rubyQuoteEscape'}, {'word': 'te_inheritable_hash', 'menu': '[S] rubyRailsMethod'}, {'word': 'TOPLEVEL_BINDING', 'menu': '[S] rubyPredefinedC'}, {'word': 'digit', 'menu': '[S] rubyRegexpCharC'}, {'word': 'ARGF', 'menu': '[S] rubyPredefinedC'}, {'word': 'ARGV', 'menu': '[S] rubyPredefinedC'}, {'word': 'D__', 'menu': '[S] rubyData'}, {'word': 'ternal', 'menu': '[S] rubyRailsMethod'}, {'word': 'ter', 'menu': '[S] rubyRailsTop'}, {'word': 'display', 'menu': '[S] rubyStringEscap'}, {'word': ':conditions', 'menu': '[S] rubyString'}, {'word': 'self', 'menu': '[S] rubyPseudoVaria'}, {'word': 'upper', 'menu': '[S] rubyRegexpCharC'}, {'word': 'throw', 'menu': '[S] rubyException'}, {'word': 'read_inheritable_attribute', 'menu': '[S] rubyRailsMethod'}, {'word': 'redo', 'menu': '[S] rubyControl'}, {'word': 'roup', 'menu': '[S] rubyNestedSquar'}, {'word': 'COPYRIGHT', 'menu': '[S] rubyPredefinedC'}, {'word': 'RELEASE_DATE', 'menu': '[S] rubyPredefinedC'}, {'word': 'require', 'menu': '[S] rubyInclude'}, {'word': 'require_relative', 'menu': '[S] rubyInclude'}, {'word': 'require_dependency', 'menu': '[S] rubyRailsInclud'}, {'word': 'rescue', 'menu': '[S] rubyExceptional'}, {'word': 'reset_inheritable_attributes', 'menu': '[S] rubyRailsMethod'}, {'word': 'retry', 'menu': '[S] rubyControl'}, {'word': 'return', 'menu': '[S] rubyControl'}, {'word': 'REVISION', 'menu': '[S] rubyPredefinedC'}, {'word': 'ascii', 'menu': '[S] rubyRegexpCharC'}, {'word': '=end', 'menu': '[S] rubyDocumentati'}, {'word': 'ask', 'menu': '[S] rubyRailsRakeMe'}, {'word': 'ass', 'menu': '[S] rubyString'}, {'word': 'sparent', 'menu': '[S] rubyNestedParen'}, {'word': 'space', 'menu': '[S] rubyRegexpCharC'}, {'word': 'ains', 'menu': '[S] rubyMethodDecla'}, {'word': 'ndef', 'menu': '[S] rubyKeywordAsMe'}, {'word': 'fail', 'menu': '[S] rubyException'}, {'word': 'FALSE', 'menu': '[S] rubyPredefinedC'}, {'word': 'false', 'menu': '[S] rubyBoolean'}, {'word': 'KCODE', 'menu': '[S] rubyPredefinedV'}, {'word': 'write_inheritable_attribute', 'menu': '[S] rubyRailsMethod'}, {'word': 'write_inheritable_hash', 'menu': '[S] rubyRailsMethod'}, {'word': 'write_inheritable_array', 'menu': '[S] rubyRailsMethod'}, {'word': 'when', 'menu': '[S] rubyConditional'}, {'word': 'while', 'menu': '[S] rubyRegexp'}, {'word': 'oop', 'menu': '[S] rubyControl'}, {'word': 'dule', 'menu': '[S] rubyModule'}, {'word': 'at_exit', 'menu': '[S] rubyControl'}, {'word': 'ata', 'menu': '[S] rubyPredefinedC'}, {'word': '_inheritable_option', 'menu': '[S] rubyRailsMethod'}, {'word': '_inheritable_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'yield', 'menu': '[S] rubyKeyword'}, {'word': '__callee__', 'menu': '[S] rubyPseudoVaria'}, {'word': ':order', 'menu': '[S] rubyString'}, {'word': '__FILE__', 'menu': '[S] rubyPseudoVaria'}, {'word': '__LINE__', 'menu': '[S] rubyPseudoVaria'}, {'word': '__method__', 'menu': '[S] rubyPseudoVaria'}, {'word': 'attr_accessor', 'menu': '[S] rubyAttribute'}, {'word': 'attr_reader', 'menu': '[S] rubyAttribute'}, {'word': 'attr_writer', 'menu': '[S] rubyAttribute'}, {'word': 'attr', 'menu': '[S] rubyAttribute'}, {'word': 'attr_internal_accessor', 'menu': '[S] rubyRailsMethod'}, {'word': 'attr_accessor_with_default', 'menu': '[S] rubyRailsMethod'}, {'word': 'attr_internal_reader', 'menu': '[S] rubyRailsMethod'}, {'word': 'attr_internal_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'attr_internal', 'menu': '[S] rubyRailsMethod'}, {'word': 'NONE', 'menu': '[S] rubyDelimEscape'}, {'word': 'imx', 'menu': '[S] rubyRegexpParen'}, {'word': 'ned?', 'menu': '[S] rubyOperator'}, {'word': 'NOTE', 'menu': '[S] rubyTodo'}, {'word': 'not', 'menu': '[S] rubyRegexp'}, {'word': 'eval', 'menu': '[S] rubyEval'}, {'word': 'nextgroup', 'menu': '[S] rubyAliasDeclar'}, {'word': 'next', 'menu': '[S] rubyControl'}, {'word': 'module', 'menu': '[S] rubyModule'}, {'word': 'module_function', 'menu': '[S] rubyAccess'}, {'word': 'module_eval', 'menu': '[S] rubyEval'}, {'word': 'xit', 'menu': '[S] rubyControl'}, {'word': 'callcc', 'menu': '[S] rubyKeyword'}, {'word': 'caller', 'menu': '[S] rubyKeyword'}, {'word': 'eld', 'menu': '[S] rubyKeyword'}, {'word': 'case', 'menu': '[S] rubyCaseExpress'}, {'word': 'catch', 'menu': '[S] rubyException'}, {'word': 'cattr_reader', 'menu': '[S] rubyRailsMethod'}, {'word': 'cattr_accessor', 'menu': '[S] rubyRailsMethod'}, {'word': 'cattr_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'keepend', 'menu': '[S] rubyRegexp'}, {'word': 'else', 'menu': '[S] rubyConditional'}, {'word': 'elsif', 'menu': '[S] rubyConditional'}, {'word': '@rubyNotTop', 'menu': '[S] rubyInterpolati'}, {'word': '@rubyStringSpecial', 'menu': '[S] rubyString'}, {'word': '@rubyRegexpSpecial', 'menu': '[S] rubyRegexpParen'}, {'word': '@rubyExtendedStringSpecial', 'menu': '[S] rubyNotTop'}, {'word': '@rubyDeclaration', 'menu': '[S] rubyNotTop'}, {'word': 'LOADED_FEATURES', 'menu': '[S] rubyPredefinedV'}, {'word': 'LOAD_PATH', 'menu': '[S] rubyPredefinedV'}, {'word': 'load', 'menu': '[S] rubyInclude'}, {'word': 'OPTIMIZE', 'menu': '[S] rubyTodo'}, {'word': 'start', 'menu': '[S] rubyInterpolati'}, {'word': 'TRUE', 'menu': '[S] rubyPredefinedC'}, {'word': 'true', 'menu': '[S] rubyBoolean'}, {'word': 'loop', 'menu': '[S] rubyControl'}, {'word': 'include', 'menu': '[S] rubyInclude'}, {'word': 'undef', 'menu': '[S] rubyDefine'}, {'word': 'lower', 'menu': '[S] rubyRegexpCharC'}, {'word': 'inheritable_attributes', 'menu': '[S] rubyRailsMethod'}, {'word': 'autoload', 'menu': '[S] rubyInclude'}, {'word': 'less', 'menu': '[S] rubyKeywordAsMe'}, {'word': 'instance_eval', 'menu': '[S] rubyEval'}, {'word': 'raise', 'menu': '[S] rubyException'}, {'word': 'railsOrderSpecial', 'menu': '[S] rubyNotTop'}, {'word': 'railsConditionsSpecial', 'menu': '[S] rubyNotTop'}, {'word': 'class', 'menu': '[S] rubyString'}, {'word': 'class_eval', 'menu': '[S] rubyEval'}, {'word': 'class_inheritable_hash', 'menu': '[S] rubyRailsMethod'}, {'word': 'class_inheritable_hash_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'class_inheritable_option', 'menu': '[S] rubyRailsMethod'}, {'word': 'class_inheritable_reader', 'menu': '[S] rubyRailsMethod'}, {'word': 'class_inheritable_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'class_inheritable_accessor', 'menu': '[S] rubyRailsMethod'}, {'word': 'class_inheritable_array_writer', 'menu': '[S] rubyRailsMethod'}, {'word': 'class_inheritable_array', 'menu': '[S] rubyRailsMethod'}, {'word': 'UsersController', 'menu': '[S] rubyRailsUserCl'}, {'word': 'User', 'menu': '[S] rubyRailsUserCl'}, {'word': 'UsersHelper', 'menu': '[S] rubyRailsUserCl'}, {'word': 'cluster', 'menu': '[S] rubyNotTop'}]
