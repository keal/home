<scope ilk="blob" lang="Ruby" name="runit/assert">
      <import line="5" module="test/unit/assertions" symbol="*" />
      <import line="6" module="runit/error" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="8" lineend="73" name="RUNIT">
        <scope ilk="namespace" line="9" lineend="72" name="Assert">
          <scope ilk="function" line="12" lineend="13" name="setup_assert" signature="setup_assert" />
          <scope ilk="function" line="15" lineend="17" name="assert_no_exception" signature="assert_no_exception(*args, &amp;block)" />
          <scope doc="To deal with the fact that RubyUnit does not check that the&#xA;regular expression is, indeed, a regular expression, if it&#xA;is not, we do our own assertion using the same semantics as&#xA;RubyUnit" ilk="function" line="23" lineend="31" name="assert_match" signature="assert_match(actual_string, expected_re, message=&quot;&quot;)" />
          <scope ilk="function" line="33" lineend="35" name="assert_not_nil" signature="assert_not_nil(actual, message=&quot;&quot;)" />
          <scope ilk="function" line="37" lineend="39" name="assert_not_match" signature="assert_not_match(actual_string, expected_re, message=&quot;&quot;)" />
          <scope ilk="function" line="41" lineend="43" name="assert_matches" signature="assert_matches(*args)" />
          <scope ilk="function" line="45" lineend="47" name="assert_fail" signature="assert_fail(message=&quot;&quot;)" />
          <scope ilk="function" line="49" lineend="51" name="assert_equal_float" signature="assert_equal_float(expected, actual, delta, message=&quot;&quot;)" />
          <scope ilk="function" line="53" lineend="55" name="assert_send" signature="assert_send(object, method, *args)" />
          <scope ilk="function" line="57" lineend="59" name="assert_exception" signature="assert_exception(exception, message=&quot;&quot;, &amp;block)" />
          <scope ilk="function" line="61" lineend="67" name="assert_respond_to" signature="assert_respond_to(method, object, message=&quot;&quot;)" />
          <scope ilk="function" line="69" lineend="71" name="called_internally?" signature="called_internally?" />
        </scope>
      </scope>
    </scope>
    