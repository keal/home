<scope ilk="blob" lang="Ruby" name="queue">
      <scope classrefs="Object" doc="This class provides a way to synchronize communication&#xA;between threads." ilk="class" name="Queue">
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new queue." ilk="function" name="new" signature="()" />
        <scope doc="Alias for #push" ilk="function" name="&lt;&lt;" signature="(obj)" />
        <scope doc="Removes all objects from the queue." ilk="function" name="clear" signature="()" />
        <scope doc="Alias for #pop" ilk="function" name="deq" signature="(non_block=false)" />
        <scope doc="Returns true is the queue is empty." ilk="function" name="empty?" signature="()" />
        <scope doc="Alias for #push" ilk="function" name="enq" signature="(obj)" />
        <scope doc="Returns the length of the queue." ilk="function" name="length" signature="()" />
        <scope doc="Returns the number of threads waiting on the queue." ilk="function" name="num_waiting" signature="()" />
        <scope doc="Retrieves data from the queue. If the queue is empty, the&#xA;calling thread is suspended until data is pushed onto the&#xA;queue." ilk="function" name="pop" signature="(non_block=false)" />
        <scope doc="Pushes obj to the queue." ilk="function" name="push" signature="(obj)" />
        <scope doc="Alias for #pop" ilk="function" name="shift" signature="(non_block=false)" />
        <scope doc="Alias for #length" ilk="function" name="size" signature="()" />
      </scope>
    </scope>
    